DISMAN-PING-MIB-CNL DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE, Integer32,
    Unsigned32, mib-2,
    NOTIFICATION-TYPE, OBJECT-IDENTITY
        FROM SNMPv2-SMI                  -- RFC2578
    TEXTUAL-CONVENTION, RowStatus,
    StorageType, DateAndTime, TruthValue
        FROM SNMPv2-TC                   -- RFC2579
    MODULE-COMPLIANCE, OBJECT-GROUP,
    NOTIFICATION-GROUP
        FROM SNMPv2-CONF                 -- RFC2580
    InterfaceIndexOrZero                 -- RFC2863
        FROM IF-MIB
    SnmpAdminString
        FROM SNMP-FRAMEWORK-MIB          -- RFC2571
    InetAddressType, InetAddress
        FROM INET-ADDRESS-MIB;           -- RFC2851

pingMIB  OBJECT IDENTIFIER ::= { mib-2 80 }

 -- Textual Conventions

  OperationResponseStatus ::= TEXTUAL-CONVENTION
    STATUS  current
    DESCRIPTION
        "Used to report the result of an operation:

         responseReceived(1) - Operation completes successfully.
         unknown(2) - Operation failed due to unknown error.
         internalError(3) - An implementation detected an error
              in its own processing that caused an operation
              to fail.
         requestTimedOut(4) - Operation failed to receive a
              valid reply within the time limit imposed on it.
         unknownDestinationAddress(5) - Invalid destination
              address.
         noRouteToTarget(6) - Could not find a route to target.
         interfaceInactiveToTarget(7) - The interface to be
              used in sending a probe is inactive without an
              alternate route existing.
         arpFailure(8) - Unable to resolve a target address to a
              media specific address.
         maxConcurrentLimitReached(9) - The maximum number of
              concurrent active operations would have been exceeded
              if the corresponding operation was allowed.
         unableToResolveDnsName(10) - The DNS name specified was
              unable to be mapped to an IP address.
         invalidHostAddress(11) - The IP address for a host
              has been determined to be invalid.  Examples of this
              are broadcast or multicast addresses."
    SYNTAX INTEGER {
                 responseReceived(1),
                 unknown(2),
                 internalError(3),
                 requestTimedOut(4),
                 unknownDestinationAddress(5),
                 noRouteToTarget(6),
                 interfaceInactiveToTarget(7),
                 arpFailure(8),
                 maxConcurrentLimitReached(9),
                 unableToResolveDnsName(10),
                 invalidHostAddress(11)
              }

 -- Top level structure of the MIB

 pingNotifications              OBJECT IDENTIFIER ::= { pingMIB 0 }
 pingObjects                    OBJECT IDENTIFIER ::= { pingMIB 1 }
 pingConformance                OBJECT IDENTIFIER ::= { pingMIB 2 }


 -- The registration node (point) for ping implementation types

 pingImplementationTypeDomains  OBJECT IDENTIFIER ::= { pingMIB 3 }

 -- Simple Object Definitions

 pingMaxConcurrentRequests OBJECT-TYPE
    ::= { pingObjects 1 }

 -- Ping Control Table

 pingCtlTable OBJECT-TYPE
   ::= { pingObjects 2 }

 pingCtlEntry OBJECT-TYPE
    ROW-STATUS-TYPE v2-status-field
    STATUS-FIELD-NAME pingCtlRowStatus
    ::= { pingCtlTable 1 }

-- Ping Results Table

 pingResultsTable OBJECT-TYPE
   ::= { pingObjects 3 }

 pingResultsEntry OBJECT-TYPE
    ROW-STATUS-TYPE no-status-field
    ::= { pingResultsTable 1 }

 -- Ping Probe History Table

 pingProbeHistoryTable OBJECT-TYPE
   ::= { pingObjects 4 }

 pingProbeHistoryEntry OBJECT-TYPE
    ROW-STATUS-TYPE no-status-field
    ::= { pingProbeHistoryTable 1 }

END

DISMAN-TRACEROUTE-MIB-CNL DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE, Integer32,
    Gauge32, Unsigned32, mib-2,
    NOTIFICATION-TYPE,
    OBJECT-IDENTITY
        FROM SNMPv2-SMI                  -- RFC2578
    RowStatus, StorageType,
    TruthValue, DateAndTime
        FROM SNMPv2-TC                   -- RFC2579
    MODULE-COMPLIANCE, OBJECT-GROUP,
    NOTIFICATION-GROUP
        FROM SNMPv2-CONF                 -- RFC2580
    SnmpAdminString
        FROM SNMP-FRAMEWORK-MIB          -- RFC2571
    InterfaceIndexOrZero                 -- RFC2863
        FROM IF-MIB
    InetAddressType, InetAddress
        FROM INET-ADDRESS-MIB            -- RFC2851
    OperationResponseStatus
        FROM DISMAN-PING-MIB;            -- RFC2925

traceRouteMIB  OBJECT IDENTIFIER ::= { mib-2 81 }

 -- Top level structure of the MIB

 traceRouteNotifications  OBJECT IDENTIFIER ::= { traceRouteMIB 0 }
 traceRouteObjects        OBJECT IDENTIFIER ::= { traceRouteMIB 1 }
 traceRouteConformance    OBJECT IDENTIFIER ::= { traceRouteMIB 2 }

 -- The registration node (point) for traceroute implementation types

 traceRouteImplementationTypeDomains OBJECT IDENTIFIER
 ::= { traceRouteMIB 3 }

 -- Simple Object Definitions

 traceRouteMaxConcurrentRequests OBJECT-TYPE
    ::= { traceRouteObjects 1 }

  -- Traceroute Control Table

 traceRouteCtlTable OBJECT-TYPE
   ::= { traceRouteObjects 2 }

 traceRouteCtlEntry OBJECT-TYPE
    ROW-STATUS-TYPE v2-status-field
    STATUS-FIELD-NAME traceRouteCtlRowStatus
    ::= { traceRouteCtlTable 1 }

 traceRouteCtlTargetAddressType OBJECT-TYPE
     SYNTAX      InetAddressType
     MAX-ACCESS  read-only
     STATUS      current
     DESCRIPTION
         "Specifies the type of host address to be used on the
         traceroute request at the remote host."
     DEFVAL { ipv4 }
     ::= { traceRouteCtlEntry 3 }

 traceRouteCtlSourceAddressType OBJECT-TYPE
     SYNTAX      InetAddressType
     MAX-ACCESS  read-only
     STATUS      current
     DESCRIPTION
         "Specifies the type of the source address,
         traceRouteCtlSourceAddress, to be used at a remote host
         when performing a traceroute operation."
     DEFVAL { unknown }
     ::= { traceRouteCtlEntry 12 }

 traceRouteCtlIfIndex OBJECT-TYPE
     SYNTAX      InterfaceIndexOrZero
     MAX-ACCESS  read-only
     STATUS      current
     DESCRIPTION
         "Setting this object to an interface's ifIndex prior
         to starting a remote traceroute operation directs
         the traceroute probes to be transmitted over the
         specified interface.  A value of zero for this object
         implies that this option is not enabled."
     DEFVAL { 0 }
     ::= { traceRouteCtlEntry 14 }

 traceRouteCtlMiscOptions OBJECT-TYPE
     SYNTAX      SnmpAdminString
     MAX-ACCESS  read-only
     STATUS      current
     DESCRIPTION
         "Enables an application to specify implementation
         dependent options."
     DEFVAL { ''H }
     ::= { traceRouteCtlEntry 15 }

 traceRouteCtlStorageType OBJECT-TYPE
    SYNTAX      StorageType
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "The storage type for this conceptual row.
        Conceptual rows having the value 'permanent' need not
        allow write-access to any columnar objects in the row."
    DEFVAL { volatile }
    ::= { traceRouteCtlEntry 20 }


 traceRouteCtlCreateHopsEntries OBJECT-TYPE
     SYNTAX      TruthValue
     MAX-ACCESS  read-only
     STATUS      current
     DESCRIPTION
         "The current path for a traceroute test is kept in the
         traceRouteHopsTable on a per hop basis when the value of
         this object is true(1)."
     DEFVAL { false }
     ::= { traceRouteCtlEntry 25 }

     traceRouteCtlType OBJECT-TYPE
         SYNTAX      OBJECT IDENTIFIER
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
         "The value of this object is used either to report or
         select the implementation method to be used for
         performing a traceroute operation. The value of this
         object may be selected from
         traceRouteImplementationTypeDomains.

         Additional implementation types should be allocated as
         required by implementers of the DISMAN-TRACEROUTE-MIB
         under their enterprise specific registration point and
         not beneath traceRouteImplementationTypeDomains."
     DEFVAL { traceRouteUsingUdpProbes }
     ::= { traceRouteCtlEntry 26 }

 -- Traceroute Results Table

 traceRouteResultsTable OBJECT-TYPE
   ::= { traceRouteObjects 3 }

 traceRouteResultsEntry OBJECT-TYPE
    ROW-STATUS-TYPE no-status-field
    ::= { traceRouteResultsTable 1 }

 -- Trace Route Probe History Table

 traceRouteProbeHistoryTable OBJECT-TYPE
   ::= { traceRouteObjects 4 }

 traceRouteProbeHistoryEntry OBJECT-TYPE
    ROW-STATUS-TYPE no-status-field
    ::= { traceRouteProbeHistoryTable 1 }

 -- Traceroute Hop Results Table

 traceRouteHopsTable OBJECT-TYPE
    ::= { traceRouteObjects 5 }

 traceRouteHopsEntry OBJECT-TYPE
    ROW-STATUS-TYPE no-status-field
    ::= { traceRouteHopsTable 1 }

 -- Notification Definition section 
 
 traceRoutePathChange TRAP-TYPE
     ENTERPRISE  traceRouteNotifications
     ERRCODE     RSG_ErrMsg_code_rlTraceRoutePathChanged_E
     SEVERITY    INFO
     ::= 1

 traceRouteTestFailed TRAP-TYPE
     ENTERPRISE  traceRouteNotifications
     ERRCODE     RSG_ErrMsg_code_rlTraceRouteTestFailure_E
     SEVERITY    INFO
     ::= 2

 traceRouteTestCompleted TRAP-TYPE
     ENTERPRISE  traceRouteNotifications
     ERRCODE     RSG_ErrMsg_code_rlTraceRouteTestCompletion_E
     SEVERITY    INFO
     ::= 3 

END

DISMAN-NSLOOKUP-MIB-CNL DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE,
    Unsigned32, mib-2, Integer32
        FROM SNMPv2-SMI                  -- RFC2578
    RowStatus
        FROM SNMPv2-TC                   -- RFC2579
    MODULE-COMPLIANCE, OBJECT-GROUP
        FROM SNMPv2-CONF                 -- RFC2580
    SnmpAdminString
        FROM SNMP-FRAMEWORK-MIB          -- RFC2571
    InetAddressType, InetAddress
        FROM INET-ADDRESS-MIB;           -- RFC2851


lookupMIB  OBJECT IDENTIFIER ::= { mib-2 82 }

 -- Top level structure of the MIB

 lookupObjects        OBJECT IDENTIFIER ::= { lookupMIB 1 }
 lookupConformance    OBJECT IDENTIFIER ::= { lookupMIB 2 }

 -- Simple Object Definitions

 lookupMaxConcurrentRequests OBJECT-TYPE
    ::= { lookupObjects 1 }

 lookupPurgeTime OBJECT-TYPE
    ::= { lookupObjects 2 }

 -- Lookup Control Table

 lookupCtlTable OBJECT-TYPE
   ::= { lookupObjects 3 }

 lookupCtlEntry OBJECT-TYPE
    ROW-STATUS-TYPE v2-status-field
    STATUS-FIELD-NAME lookupCtlRowStatus
    ::= { lookupCtlTable 1 }

-- Lookup Results Table

 lookupResultsTable OBJECT-TYPE
   ::= { lookupObjects 4 }

 lookupResultsEntry OBJECT-TYPE
    ROW-STATUS-TYPE no-status-field
    ::= { lookupResultsTable 1 }

END
